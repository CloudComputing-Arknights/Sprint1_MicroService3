openapi: 3.0.4
info:
  title: Neighbourhood Exchange - Transaction Service
  description: |-
    This is a Transaction Service for Neighbourhood Exchange.
  version: 1.0.0
tags:
  - name: transaction
    description: Everything about transactions.
paths:
  /transactions/transaction:
    post:
      tags:
        - transaction
      summary: Create a new transaction request.
      description: Initiates a new transaction between two users for specific items.
      operationId: createTransaction
      requestBody:
        description: The transaction to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Invalid input
          
  /transactions/{transactionId}:
    get:
      tags:
        - transaction
      summary: Get a transaction by ID
      description: Returns the transaction details for the given transactionId.
      operationId: getTransaction
      parameters:
        - name: transactionId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '404':
          description: Transaction not found

    put:
      tags:
        - transaction
      summary: Update an existing transaction
      description: Updates the details or status of a transaction.
      operationId: updateTransaction
      parameters:
        - name: transactionId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: The transaction object with updated fields
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Invalid input
        '404':
          description: Transaction not found

    delete:
      tags:
        - transaction
      summary: Delete a transaction
      description: Deletes the transaction with the given transactionId.
      operationId: deleteTransaction
      parameters:
        - name: transactionId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Transaction deleted successfully
        '404':
          description: Transaction not found
    
components:
  schemas:
    Transaction:
      type: object
      properties:
        itemId:
          type: integer
          format: int64
          example: 8
        initiatorUserId:
          type: string
          example: 4
        receiverUserId:
          type: string
          example: 6
        status:
          type: string
          description: The current status of the transaction.
          enum: [pending, completed, canceled]
        createdAt:
          type: string
          format: date-time
          description: The timestamp when the transaction was created.
        updatedAt:
          type: string
          format: date-time
          description: The timestamp when the transaction was last updated.